name: PCF Solution Build

on:
  push:
    branches:
      - master  # Workflow execution will be triggered when code is pushed to the "main" branch

jobs:
  build:
    runs-on: windows-latest # ubuntu-latest  # Uses an Ubuntu runtime environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Downloads the source code

      - name: Extract Solution Name and Version
        id: extract-info
        run: |
          $xml = [xml](Get-Content ./src/solution/src/Other/solution.xml)
          $solution_version = $xml.ImportExportXml.SolutionManifest.Version
          $solution_name = $xml.ImportExportXml.SolutionManifest.LocalizedNames.LocalizedName.description

          echo "Solution: $solution_name"
          echo "Version:  $solution_version"
          echo "name=solution-name::$solution_name"   >> $GITHUB_OUTPUT
          echo "name=solution-version::$solution_version"   >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Sets up the Node.js environment

      - name: Install Dependencies
        working-directory: ./src  # Sets the working directory to the control directory
        run: npm install  # Installs project dependencies for the PCF control

      - name: Build PCF Control
        working-directory: ./src  # Sets the working directory to the control directory
        run: npm run build  # Executes the build process for the PCF control

      # - name: Build Solution
      #   working-directory: ./src/solution  # Sets the working directory to the solution directory
      #   run: npm install && npm run build  # Installs dependencies and executes the build process for the solution

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build and Package PCF Solution
        working-directory: ./src/solution  # Sets the working directory to the solution directory
        run: |
          msbuild /t:build /restore
          echo "Name: $(grep -oP '<LocalizedName description="\K[^"]+' ./src/Other/solution.xml)"
          echo "name=solution-name::$(grep -oP '<LocalizedName description="\K[^"]+' ./src/Other/solution.xml)"  >> $GITHUB_OUTPUT
          echo "Version: $(cat ./src/Other/solution.xml | grep -oP '<Version>\K[^<]+' | tr -d '\n')"
          echo "name=solution-version::$(cat ./src/Other/solution.xml | grep -oP '<Version>\K[^<]+' | tr -d '\n')"  >> $GITHUB_OUTPUT
      
      - name: Archive Solution
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.extract-info.outputs.solution-name }}_managed_${{ steps.extract-info.outputs.solution-version }}.zip
          path: ./src/solution/bin/Debug/solution.zip
