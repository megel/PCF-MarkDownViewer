name: PCF Solution Build

on:
  push:
    branches:
      - master  # Workflow execution will be triggered when code is pushed to the "main" branch

jobs:
  build:
    runs-on: windows-latest # ubuntu-latest  # Uses an Ubuntu runtime environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Downloads the source code

      - name: Extract Solution Name and Version
        id: extract-info
        run: |
          $xml = [xml](Get-Content ./src/solution/src/Other/solution.xml)
          $solution_version = $xml.ImportExportXml.SolutionManifest.Version
          $solution_name    = "$($xml.ImportExportXml.SolutionManifest.LocalizedNames.LocalizedName.description)".replace(" ", "_")

          echo "Solution: $solution_name"
          echo "Version:  $solution_version"
          echo "solution-name=$solution_name"   >> $GITHUB_OUTPUT
          echo "solution-version=$solution_version"   >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Sets up the Node.js environment

      - name: Install Dependencies
        working-directory: ./src  # Sets the working directory to the control directory
        run: npm install  # Installs project dependencies for the PCF control

      - name: Build PCF Control
        working-directory: ./src  # Sets the working directory to the control directory
        run: npm run build  # Executes the build process for the PCF control

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build and Package PCF Solution
        id:   build-solution
        working-directory: ./src/solution  # Sets the working directory to the solution directory
        run: |
          msbuild /t:build /restore
          $artifact = "./src/solution/bin/Debug/${{ steps.extract-info.outputs.solution-name }}_managed_${{ steps.extract-info.outputs.solution-version }}.zip"
          echo "Artifact:  $artifact"
          mv ./bin/Debug/solution.zip ./bin/Debug/${{ steps.extract-info.outputs.solution-name }}_managed_${{ steps.extract-info.outputs.solution-version }}.zip

          echo "artifact=$artifact"   >> $GITHUB_OUTPUT

      - name: Archive Solution
        uses: actions/upload-artifact@v2
        with:
          #name: ${{ steps.extract-info.outputs.solution-name }}_managed_${{ steps.extract-info.outputs.solution-version }}.zip
          path: ${{ steps.build-solution.artifact }}
